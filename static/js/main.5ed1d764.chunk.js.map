{"version":3,"sources":["store/actions/userFriendsActions.js","store/reducers/userFriendsReducer.js","store/actions/userActions.js","store/reducers/userReducer.js","store/actions/usersActions.js","store/reducers/usersReducer.js","store/store.js","utils/constants.js","services/fetchUsers.js","store/selectors/usersSelector.js","components/common/Error.js","images/Spinner_Loading.svg","components/common/Preloader.js","components/ListItem.js","components/List.js","pages/Home.js","components/User/Address.js","components/User/PersonalInfo.js","components/User/UsersChain.js","components/User/User.js","services/fetchUser.js","services/fetchUserFriends.js","store/selectors/userFriendsSelector.js","store/selectors/userSelector.js","pages/Details.js","App.js","index.js"],"names":["FETCH_USER_FRIENDS_PENDING","FETCH_USER_FRIENDS_SUCCESS","FETCH_USER_FRIENDS_FAILURE","fetchUserFriendsPending","type","initialState","pendingFr","friends","errorFr","userId","FETCH_USER_PENDING","FETCH_USER_SUCCESS","FETCH_USER_FAILURE","pending","user","error","usersChain","FETCH_USERS_PENDING","FETCH_USERS_SUCCESS","FETCH_USERS_FAILURE","users","middlewares","thunk","reducers","combineReducers","state","action","payload","list","pagination","userChainPayload","fullName","prefix","name","lastName","join","at","push","id","userFriends","store","createStore","applyMiddleware","API_URL","fetchUsers","pageNumber","dispatch","fetch","then","res","json","catch","fetchUsersFailure","getUsersState","getUsersListState","getUsersPaginationState","Error","className","Preloader","src","preloader","alt","ListItem","url","imageUrl","to","title","List","map","u","Home","useState","setPageNumber","useDispatch","useSelector","nextPage","useEffect","setTimeout","window","onscroll","innerHeight","document","documentElement","scrollTop","Math","max","body","scrollHeight","offsetHeight","Address","company","address","suffix","city","country","streetAddress","zipCode","PersonalInfo","email","ip","jobArea","jobType","UsersChain","userPath","i","User","fetchUser","fetchUserFailure","fetchUserFriends","fetchUserFriendsSuccess","fetchUserFriendsFailure","getUserFriendsListState","getUserFriendsPaginationState","getUserState","getUsersChainState","Details","location","useLocation","useParams","friendsList","scrollTo","App","path","exact","element","reactDom","render","getElementById"],"mappings":"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","file":"static/js/main.5ed1d764.chunk.js","sourcesContent":["export const FETCH_USER_FRIENDS_PENDING = '[FRIENDS] FETCH_PENDING';\r\nexport const FETCH_USER_FRIENDS_SUCCESS = '[FRIENDS] FETCH_SUCCESS';\r\nexport const FETCH_USER_FRIENDS_FAILURE = '[FRIENDS] FETCH_FAILURE';\r\n\r\nexport const fetchUserFriendsPending = () => {\r\n   return {\r\n      type: FETCH_USER_FRIENDS_PENDING\r\n   };\r\n};\r\n\r\nexport const fetchUserFriendsSuccess = (friends, userId) => {\r\n   return {\r\n      type: FETCH_USER_FRIENDS_SUCCESS,\r\n      payload: friends,\r\n      userId\r\n   };\r\n};\r\n\r\nexport const fetchUserFriendsFailure = (error) => {\r\n   return {\r\n      type: FETCH_USER_FRIENDS_FAILURE,\r\n      payload: error\r\n   };\r\n};\r\n","import { FETCH_USER_FRIENDS_FAILURE, FETCH_USER_FRIENDS_PENDING, FETCH_USER_FRIENDS_SUCCESS } from \"../actions/userFriendsActions\";\r\n\r\n\r\n\r\nconst initialState = {\r\n   pendingFr: true,\r\n   friends: [],\r\n   errorFr: null,\r\n   userId: null,\r\n};\r\n\r\nexport const userFriendsReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case FETCH_USER_FRIENDS_PENDING:\r\n         return {\r\n            ...state,\r\n            pending: true\r\n         };\r\n      case FETCH_USER_FRIENDS_SUCCESS:\r\n         let payload = action.payload;\r\n\r\n         //Checking if user was changed and nulling friends list if so.\r\n\r\n         if (state.userId !== action.userId) {\r\n            state.friends = [];\r\n         }\r\n\r\n         /*\r\n            Checking if friends list exist.\r\n            IF YES adding to current list new list.\r\n            IF NO just passing whole response.\r\n         */\r\n\r\n         if (state.friends?.list) {\r\n            payload = {\r\n               pagination: action.payload,\r\n               list: [...state.friends?.list, ...action.payload.list]\r\n            }\r\n         } else {\r\n            payload = action.payload\r\n         }\r\n         return {\r\n            ...state,\r\n            pending: false,\r\n            friends: payload,\r\n            userId: action.userId,\r\n         }\r\n      case FETCH_USER_FRIENDS_FAILURE:\r\n         return {\r\n            ...state,\r\n            pending: false,\r\n            error: action.payload\r\n         }\r\n      default:\r\n         return state;\r\n   };\r\n};","export const FETCH_USER_PENDING = '[USER] FETCH_PENDING';\r\nexport const FETCH_USER_SUCCESS = '[USER] FETCH_SUCCESS';\r\nexport const FETCH_USER_FAILURE = '[USER] FETCH_FAILURE';\r\n\r\nexport const fetchUserPending = () => {\r\n   return {\r\n      type: FETCH_USER_PENDING\r\n   };\r\n};\r\n\r\nexport const fetchUserSuccess = (user) => {\r\n   return {\r\n      type: FETCH_USER_SUCCESS,\r\n      payload: user\r\n   }\r\n};\r\n\r\nexport const fetchUserFailure = (error) => {\r\n   return {\r\n      type: FETCH_USER_FAILURE,\r\n      payload: error\r\n   }\r\n};","import { FETCH_USER_FAILURE, FETCH_USER_PENDING, FETCH_USER_SUCCESS } from \"../actions/userActions\";\r\n\r\n\r\nconst initialState = {\r\n   pending: true,\r\n   user: [],\r\n   error: null,\r\n   usersChain: [],\r\n};\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case FETCH_USER_PENDING:\r\n         return {\r\n            ...state,\r\n            pending: true,\r\n         };\r\n      case FETCH_USER_SUCCESS:\r\n\r\n         const userChainPayload = state.usersChain;\r\n         const payload = action.payload;\r\n         const fullName = [payload.prefix, payload.name, payload.lastName].join(' ');\r\n\r\n\r\n         /**\r\n            Checking if name of next user in chain is different\r\n            Code may seem little dirty with this logic, but it resolves\r\n            the problem of original sample.\r\n\r\n            //! We are no loosing 1st user in chain after refresh\r\n         */\r\n\r\n         if (state.usersChain?.at(-1)?.name !== fullName) {\r\n            userChainPayload.push({ name: fullName, id: action.payload.id });\r\n         }\r\n         return {\r\n            ...state,\r\n            pending: false,\r\n            user: action.payload,\r\n            usersChain: userChainPayload,\r\n         }\r\n      case FETCH_USER_FAILURE:\r\n         return {\r\n            ...state,\r\n            pending: false,\r\n            error: action.payload,\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}","export const FETCH_USERS_PENDING = '[USERS] FETCH_PENDING';\r\nexport const FETCH_USERS_SUCCESS = '[USERS] FETCH_SUCCESS';\r\nexport const FETCH_USERS_FAILURE = '[USERS] FETCH_FAILURE';\r\nexport const UPDATE_USERS_PAGE = '[USERS] UPDATE_PAGE';\r\n\r\nexport const fetchUsersPending = () => {\r\n   return {\r\n      type: FETCH_USERS_PENDING\r\n   };\r\n};\r\n\r\nexport const fetchUsersSuccess = (users) => {\r\n   return {\r\n      type: FETCH_USERS_SUCCESS,\r\n      payload: users\r\n   };\r\n};\r\n\r\nexport const fetchUsersFailure = (error) => {\r\n   return {\r\n      type: FETCH_USERS_FAILURE,\r\n      payload: error\r\n   };\r\n};","import { FETCH_USERS_FAILURE, FETCH_USERS_PENDING, FETCH_USERS_SUCCESS } from \"../actions/usersActions\"\r\n\r\nconst initialState = {\r\n   pending: true,\r\n   users: [],\r\n   error: null,\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n      case FETCH_USERS_PENDING:\r\n         return {\r\n            ...state,\r\n            pending: true,\r\n         }\r\n      case FETCH_USERS_SUCCESS:\r\n         let payload = action.payload;\r\n\r\n         /*\r\n            Checking if users list exist.\r\n            IF YES adding to current list new list.\r\n            IF NO just passing whole response.\r\n         */\r\n\r\n         if (state.users?.list) {\r\n            payload = {\r\n               pagination: action.payload,\r\n               list: [...state.users?.list, ...action.payload.list]\r\n            }\r\n         } else {\r\n            payload = action.payload\r\n         }\r\n         return {\r\n            ...state,\r\n            pending: false,\r\n            users: payload,\r\n         }\r\n      case FETCH_USERS_FAILURE:\r\n         return {\r\n            ...state,\r\n            pending: false,\r\n            error: action.payload\r\n         }\r\n      default:\r\n         return state\r\n   }\r\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { userFriendsReducer } from \"./reducers/userFriendsReducer\";\r\nimport { userReducer } from \"./reducers/userReducer\";\r\nimport { usersReducer } from \"./reducers/usersReducer\";\r\n\r\n\r\n\r\nconst middlewares = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n   users: usersReducer,\r\n   user: userReducer,\r\n   userFriends: userFriendsReducer,\r\n});\r\n\r\nconst store = createStore(\r\n   reducers,\r\n   applyMiddleware(...middlewares),\r\n);\r\n\r\nexport default store;","export const API_URL = 'http://sweeftdigital-intern.eu-central-1.elasticbeanstalk.com';\r\nexport const USERS_PER_PAGE = 20;","import { fetchUsersFailure, fetchUsersPending, fetchUsersSuccess } from \"../store/actions/usersActions\"\r\nimport { API_URL, USERS_PER_PAGE } from \"../utils/constants\";\r\n\r\n/**\r\n * @desc Fetching all users (by portion)\r\n * @param pageNumber - current Page number\r\n * @return function which is dispatching success or failure AC\r\n */\r\n\r\nexport const fetchUsers = (pageNumber) => {\r\n   return (dispatch) => {\r\n      dispatch(fetchUsersPending());\r\n      fetch(`${API_URL}/user/${pageNumber}/${USERS_PER_PAGE}`)\r\n         .then(res => res.json())\r\n         .then(res => {\r\n            dispatch(fetchUsersSuccess(res));\r\n         })\r\n         .catch(error => {\r\n            dispatch(fetchUsersFailure(error));\r\n         });\r\n   };\r\n};","export const getUsersState = (state) => state.users;\r\nexport const getUsersListState = (state) => state.users.users.list;\r\nexport const getUsersPaginationState = (state) => state.users.users.pagination;","import React from 'react'\r\n\r\nconst Error = ({ error }) => {\r\n   return (\r\n      <div className='ui negative message'>\r\n         <div className='header'>\r\n            {error}\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Error\r\n","export default __webpack_public_path__ + \"static/media/Spinner_Loading.b767aab4.svg\";","import React from 'react';\r\nimport preloader from '../../images/Spinner_Loading.svg';\r\n\r\nconst Preloader = () => {\r\n   return (\r\n      <div>\r\n         <img src={preloader} alt='preloader' />\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Preloader","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst ListItem = ({ user }) => {\r\n\r\n   const url = `${user.imageUrl}/${user.id}`;\r\n\r\n   return (\r\n      <div className={`four wide column`}>\r\n         <Link to={`/user/${user.id}`}>\r\n            <div className='ui card'>\r\n               <img src={url} alt={user.title} />\r\n               <div className='content' >\r\n                  <p className='header'>{user.prefix} {user.name} {user.lastName}</p>\r\n                  <div className='meta'>\r\n                     <p>{user.title}</p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </Link>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\nimport ListItem from './ListItem'\r\n\r\nconst List = ({ users }) => {\r\n\r\n   const user = users?.map(u => <ListItem key={u.id} user={u} />)\r\n\r\n   return (\r\n      <div className='ui grid'>\r\n         {user}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default List\r\n","import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { fetchUsers } from '../services/fetchUsers';\r\nimport { getUsersListState, getUsersPaginationState, getUsersState } from '../store/selectors/usersSelector';\r\n\r\nimport Error from '../components/common/Error';\r\nimport Preloader from '../components/common/Preloader';\r\nimport List from '../components/List';\r\n\r\nconst Home = () => {\r\n\r\n   const [pageNumber, setPageNumber] = useState(1);\r\n\r\n   const dispatch = useDispatch();\r\n\r\n   const { pending, error } = useSelector(getUsersState);\r\n   const list = useSelector(getUsersListState);\r\n   const pagination = useSelector(getUsersPaginationState);\r\n\r\n   let nextPage = pagination?.nextPage || pagination?.pagination?.nextPage;\r\n\r\n   useEffect(() => {\r\n      dispatch(fetchUsers(pageNumber));\r\n   }, [dispatch, pageNumber])\r\n\r\n   // Infinite scroll\r\n\r\n   const checkScroll = () => {\r\n\r\n      //Setting timeout to avoid to much requests to server\r\n      setTimeout(() => {\r\n         window.onscroll = () => {\r\n\r\n            //Checking if user scrolled to the bottom and next page exists.\r\n\r\n            if (window.innerHeight + document.documentElement.scrollTop >= Math.max(document.body.scrollHeight, document.documentElement.offsetHeight) && nextPage) {\r\n               setPageNumber(pageNumber + 1);\r\n            }\r\n         }\r\n      }, 500)\r\n\r\n   }\r\n   checkScroll();\r\n\r\n   //Checking for errors and displaying if one exists;\r\n\r\n   if (error) return <Error error={error} />;\r\n\r\n   return (\r\n      <>\r\n         <List users={list} />\r\n         {pending && <Preloader />}\r\n      </>\r\n   )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst Address = ({ company, address }) => {\r\n   return (\r\n      <div className='four wide column'>\r\n         <fieldset>\r\n            <legend>Address</legend>\r\n            <div className='header'>{company?.name} {company?.suffix}</div>\r\n\r\n            <div className='additional-info'>\r\n               <div><p className='info-type'>City:</p> {address?.city}</div>\r\n               <div><p className='info-type'>Country:</p> {address?.country}</div>\r\n               <div><p className='info-type'>State:</p> {address?.state}</div>\r\n               <div><p className='info-type'>Street:</p> {address?.streetAddress}</div>\r\n               <div><p className='info-type'>ZIP:</p> {address?.zipCode}</div>\r\n            </div>\r\n         </fieldset>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Address\r\n","import React from 'react'\r\n\r\nconst PersonalInfo = ({ user }) => {\r\n   return (\r\n      <div className='personal-info eight wide column'>\r\n         <fieldset>\r\n            <legend>Info</legend>\r\n            <div className='header'>{user.prefix} {user.name} {user.lastName}</div>\r\n            <i>{user.title}</i>\r\n\r\n            <div className='additional-info' >\r\n               <div><p className='info-type'>Email:</p> {user.email}</div>\r\n               <div><p className='info-type'>Ip Address:</p> {user.ip}</div>\r\n               <div><p className='info-type'>Job Area:</p> {user.jobArea}</div>\r\n               <div><p className='info-type'>Job Type:</p> {user.jobType}</div>\r\n            </div>\r\n         </fieldset>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default PersonalInfo\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst UsersChain = ({ usersChain }) => {\r\n\r\n   const userPath = usersChain?.map((u, i) => {\r\n      return (\r\n         <span key={i}>\r\n            {i > 0 && '>'}\r\n            <Link to={`/user/${u.id}`}>{u.name}</Link>\r\n         </span>\r\n      )\r\n   });\r\n\r\n   return (\r\n      <div className='users-chain'>\r\n         {userPath}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default UsersChain\r\n","import React from 'react'\r\nimport List from '../List';\r\nimport Address from './Address';\r\nimport PersonalInfo from './PersonalInfo';\r\nimport UsersChain from './UsersChain';\r\n\r\nconst User = ({ user, friends, usersChain, userId }) => {\r\n\r\n   return (\r\n      <div className='ui grid'>\r\n\r\n         <img className='four wide column image' src={`${user.imageUrl}?v=${userId}`} alt={user.title} />\r\n\r\n         <PersonalInfo user={user} />\r\n\r\n         <Address company={user.company} address={user.address} />\r\n\r\n         <UsersChain usersChain={usersChain} />\r\n\r\n         <div className='friends-list' >\r\n            <h2>Friends:</h2>\r\n            <List users={friends} />\r\n         </div>\r\n      </div>\r\n\r\n   )\r\n}\r\n\r\nexport default User\r\n","import { fetchUserFailure, fetchUserPending, fetchUserSuccess } from \"../store/actions/userActions\"\r\nimport { API_URL } from \"../utils/constants\";\r\n\r\n\r\n/**\r\n * @desc Fetching user detailed information\r\n * @param userId - ID of user\r\n * @return function which is dispatching success or failure AC\r\n */\r\n\r\nexport const fetchUser = (userId) => {\r\n   return (dispatch) => {\r\n      dispatch(fetchUserPending());\r\n      fetch(`${API_URL}/user/${userId}`)\r\n         .then(res => res.json())\r\n         .then(res => {\r\n            dispatch(fetchUserSuccess(res));\r\n         })\r\n         .catch(error => {\r\n            dispatch(fetchUserFailure(error));\r\n         });\r\n   };\r\n};","import { fetchUserFriendsFailure, fetchUserFriendsPending, fetchUserFriendsSuccess } from \"../store/actions/userFriendsActions\"\r\nimport { API_URL, USERS_PER_PAGE } from \"../utils/constants\";\r\n\r\n/**\r\n * @desc Fetching user friends\r\n * @param userId - ID of user, pageNumber - current Page number\r\n * @return function which is dispatching success or failure AC\r\n */\r\n\r\nexport const fetchUserFriends = (userId, pageNumber) => {\r\n   return (dispatch) => {\r\n      dispatch(fetchUserFriendsPending);\r\n      fetch(`${API_URL}/user/${userId}/friends/${pageNumber}/${USERS_PER_PAGE}`)\r\n         .then(res => res.json())\r\n         .then(res => {\r\n            dispatch(fetchUserFriendsSuccess(res, userId))\r\n         })\r\n         .catch(error => {\r\n            dispatch(fetchUserFriendsFailure(error));\r\n         });\r\n   };\r\n};","export const getUserFriendsState = (state) => state.userFriends;\r\nexport const getUserFriendsListState = (state) => state.userFriends.friends.list;\r\nexport const getUserFriendsPaginationState = (state) => state.userFriends.friends.pagination;","export const getUserState = (state) => state.user;\r\nexport const getUsersChainState = (state) => state.user.usersChain;","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation, useParams } from 'react-router-dom'\r\nimport Error from '../components/common/Error';\r\nimport Preloader from '../components/common/Preloader';\r\nimport User from '../components/User/User';\r\nimport { fetchUser } from '../services/fetchUser';\r\nimport { fetchUserFriends } from '../services/fetchUserFriends';\r\nimport { getUserFriendsListState, getUserFriendsPaginationState } from '../store/selectors/userFriendsSelector';\r\nimport { getUsersChainState, getUserState } from '../store/selectors/userSelector';\r\n\r\nconst Details = () => {\r\n\r\n   const [pageNumber, setPageNumber] = useState(1);\r\n\r\n   const dispatch = useDispatch();\r\n   const location = useLocation();\r\n   const { userId } = useParams();\r\n\r\n   const { pending, user, error } = useSelector(getUserState);\r\n   const usersChain = useSelector(getUsersChainState);\r\n   const friendsList = useSelector(getUserFriendsListState);\r\n   const pagination = useSelector(getUserFriendsPaginationState);\r\n\r\n   let nextPage = pagination?.nextPage || pagination?.pagination?.nextPage;\r\n\r\n   //Scrolling to top on each URL update\r\n\r\n   useEffect(() => {\r\n      window.scrollTo(0, 0);\r\n   }, [location]);\r\n\r\n   //Fetching user and user Friends\r\n\r\n   useEffect(() => {\r\n      dispatch(fetchUser(userId));\r\n      dispatch(fetchUserFriends(userId, pageNumber));\r\n   }, [dispatch, userId, pageNumber]);\r\n\r\n   //Updating pageNumber on userId Change\r\n\r\n   useEffect(() => {\r\n      setPageNumber(1);\r\n   }, [userId]);\r\n\r\n   // Infinite scroll\r\n\r\n   const checkScroll = () => {\r\n\r\n      //Setting timeout to avoid accidental requests to server\r\n\r\n      setTimeout(() => {\r\n         window.onscroll = () => {\r\n            //Checking if user scrolled to the bottom and next page exists.\r\n\r\n            if (window.innerHeight + document.documentElement.scrollTop >= Math.max(document.body.scrollHeight, document.documentElement.offsetHeight) && nextPage) {\r\n               setPageNumber(pageNumber + 1);\r\n            }\r\n         }\r\n      }, 500)\r\n\r\n   }\r\n   checkScroll();\r\n\r\n   //Checking for errors and displaying if one exists;\r\n\r\n   if (error) return <Error error={error} />;\r\n\r\n   return (\r\n      <div className='user-wrapper'>\r\n         <User user={user} friends={friendsList} usersChain={usersChain} userId={userId} />\r\n         {pending && <Preloader />}\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Details\r\n","import React from 'react';\r\nimport { HashRouter, Routes, Route } from 'react-router-dom';\r\n\r\nimport Home from './pages/Home';\r\nimport Details from './pages/Details';\r\n\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport './style.css'\r\n\r\nconst App = () => {\r\n   return (\r\n      <div className='ui container wrapper'>\r\n         <HashRouter>\r\n            <Routes>\r\n               <Route path='/' exact element={<Home />} />\r\n               <Route path='/user/:userId' element={<Details />} />\r\n            </Routes>\r\n         </HashRouter>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default App\r\n","import reactDom from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store/store\";\r\nimport App from \"./App\";\r\n\r\nreactDom.render(\r\n   <Provider store={store} >\r\n      <App />\r\n   </Provider>\r\n   ,\r\n   document.getElementById('root')\r\n);"],"sourceRoot":""}